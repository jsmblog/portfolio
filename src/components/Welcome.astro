<main>
	<section id="sect-greet">
		<div id="sect-contact-and-dm">
			<a href="https://github.com/jsmblog/" target="_blank" rel="noopener noreferrer"><img id="icon-github" src="./github.png" width="27" alt="" /></a>
			<button id="btn-contact-me"> contáctame </button>
			<button id="toggle-theme-btn">
				<img
					id="theme-icon"
					src="./moonBlue.png"
					width="16"
					alt="Modo oscuro"
				/>
			</button>
		</div>
		<h1 id="greet" class="merriweather-bold"></h1>
		<h3 id="greet2">
			En mi camino como desarrollador, he adquirido habilidades y una
			variedad de tecnologías que me <br /> permiten llevar a cabo todo tipo
			de proyectos.
		</h3>
		<div id="cont-languages-know-to-use">
			<div id="languages-container"></div>
		</div>
		<div id="div-proyects-and-donwload-cv">
			<button id="btn-my-proyects"> mis proyectos → </button>
			<h4 id="donwload-cv">DESCARGAR CV</h4>
		</div>
	</section>

	<!-- Modal para formulario de contacto -->
	<div id="contact-modal" class="modal hidden">
		<div class="modal-content">
			<h3>Contáctame</h3>
			<form id="contact-form">
				<span id="close-modal" class="close">X</span>
				<label for="email">Email:</label>
				<input type="email" id="email" name="email" placeholder="Tu email" required />
				<label for="message">Mensaje:</label>
				<textarea id="message" name="message" placeholder="Escribe tu mensaje aquí..." rows="4" required></textarea>
				<button type="submit">Enviar</button>
			</form>
		</div>
	</div>
</div>
<div id="projects-modal">
	<button id="previus" class="styles-btn">{'<'}</button>
	<div id="project-item-container">
	</div>
	<button id="next" class="styles-btn">{'>'}</button>
	<button id="close-modal-projects">X</button>
  </div>
  
</main>
<script>
	const iconGithub = document.getElementById('icon-github')	
	const GREET =
		"¡Hola! Soy Joel Saldarriaga Mera , Desarrollador Web Frontend.";
	const greetToDisplay = document.getElementById("greet");
	let index = 0;

	const interval = setInterval(() => {
		if (index < GREET.length) {
			greetToDisplay.textContent += GREET[index];
			index++;
		} else {
			clearInterval(interval);
		}
	}, 100);

	const LANGUAGES = [
		{ name: "HTML", src: "./html.png" },
		{ name: "CSS", src: "./css-3.png" },
		{ name: "JavaScript", src: "./js.png" },
		{ name: "C#", src: "./c-sharp.png" },
		{ name: "Python", src: "./python.png" },
		{ name: "Git", src: "./git.png" },
		{ name: "React", src: "./react.png" },
		{ name: "Astro", src: "./astro.png" },
		{ name: "Firebase", src: "./icon-firebase.png" },
	];
	const languagesContainer = document.getElementById("languages-container");

	LANGUAGES.forEach((lang) => {
		const langElement = `
			<div class="language-item">
				<img src="${lang.src}" width="24" alt="${lang.name}" />
				<h6>${lang.name}</h6>
			</div>
		`;
		languagesContainer.innerHTML += langElement;
	});

	// Alternar tema
	const toggleThemeBtn = document.getElementById("toggle-theme-btn");
	const themeIcon = document.getElementById("theme-icon");
	const languageNames = document.querySelectorAll("#languages-container h6");
    const BTN_PROJECTS = document.getElementById('btn-my-proyects');
	
	let isDarkMode = false;

	toggleThemeBtn.addEventListener("click", () => {
		document.body.style.background = isDarkMode
			? "linear-gradient(to bottom, #ffffff, #e0e0e0)"
			: "linear-gradient(to bottom, #092635, #020d16)";

		themeIcon.src = isDarkMode ? "./moonBlue.png" : "./sun.png";
        iconGithub.style.filter = !isDarkMode ? 'brightness(0) invert(1)' : ''
		greetToDisplay.style.background = !isDarkMode
			? "linear-gradient(to bottom, #333, white)"
			: "linear-gradient(90deg, var(--co-black-1), #2d3bff, #cf1512)";
		greetToDisplay.style.webkitBackgroundClip = "text";
		greetToDisplay.style.webkitTextFillColor = "transparent";

		languageNames.forEach((h6) => {
			h6.style.color = isDarkMode ? "#333333" : "#ffffff";
		});

		isDarkMode = !isDarkMode;
	});

	const downloadCV = document.getElementById("donwload-cv");
	downloadCV.addEventListener("click", () => {
		const link = document.createElement("a");
		link.href = "./Cv-JoelSm.pdf"; // Ruta al archivo en la carpeta public
		link.download = "Cv-JoelSm.pdf";
		link.click();
	});

	// Modal para el formulario de contacto
	const modal = document.getElementById("contact-modal");
	const btnContactMe = document.getElementById("btn-contact-me");
	const closeModal = document.getElementById("close-modal");

	// Mostrar modal
	btnContactMe.addEventListener("click", () => {
		modal.classList.remove("hidden");
		modal.classList.add("show");
	});

	// Cerrar modal
	closeModal.addEventListener("click", () => {
		modal.classList.remove("show");
		modal.classList.add("hidden");
	});

	const contactForm = document.getElementById("contact-form");
	contactForm.addEventListener("submit", (e) => {
		e.preventDefault();
		modal.classList.remove("show");
		modal.classList.add("hidden");
	});

	const MY_PROJECTS = [
		{
			name:'Documentación C.P.P',
			description: 'Documentación del lenguaje de programación c++ .',
			technologiesUsed: [
				{
					language:'html',
					icon:'html.png'
				},
				{
					language:'css',
					icon:'css-3.png'
				},
				{
					language:'astro',
					icon:'astro.png'
				}
			],
			link: 'https://cpp-language.netlify.app/',
			image: 'mockup-cpp.png',
		},
		{
			name:'Tic-Tac-Toe',
			description: 'Clásico juego de tres en línea , juega con amigos o con ai , ¡animate a jugar!',
			technologiesUsed: [
				{
					language:'vite',
					icon:'vite.png'
				},
				{
					language:'react',
					icon:'react.png'
				}
			],
			link: 'https://game-joel.netlify.app/',
			image: 'mockup-tic-tac-toe.png',
		},
		{
			name:'Snake Game',
			description: 'Disfruta el divertido y clásico juego de snake , ¡ prueba funcionalidades secretas !.',
			technologiesUsed: [
				{
					language:'vite',
					icon:'vite.png'
				},
				{
					language:'react',
					icon:'react.png'
				}
			],
			link: 'https://snake-jsm.netlify.app/',
			image: 'mockup-snake-game.png',
		},
		{
			name:'Passran',
			description: 'Crea contraseñas seguras , rápido , y fácil.',
			technologiesUsed: [
			{
					language:'html',
					icon:'html.png'
				},
				{
					language:'css',
					icon:'css-3.png'
				},
				{
					language:'js',
					icon:'js.png'
				},
			],
			link: 'https://passran.netlify.app/',
			image: 'mockup-passran.png',
		},
		{
			name:'EspamChat',
			description: '¡Conoce amigos de tu universidad con EspamChat!',
			technologiesUsed: [
			    {
					language:'vite',
					icon:'vite.png'
				},
				{
					language:'css',
					icon:'css-3.png'
				},
				{
					language:'react',
					icon:'react.png'
				},
				{
					language:'firebase',
					icon:'icon-firebase.png'
				},
			],
			link: 'https://espamchat.netlify.app/',
			image: 'mockup-espamchat.png',
		},
		{
			name:'EspamNews',
			description: 'Explora,encuentra noticias,ofertas de empleo,eventos y artículos.',
			technologiesUsed: [
			    {
					language:'vite',
					icon:'vite.png'
				},
				{
					language:'css',
					icon:'css-3.png'
				},
				{
					language:'react',
					icon:'react.png'
				},
				{
					language:'firebase',
					icon:'icon-firebase.png'
				},
			],
			link: 'https://espamnews.netlify.app/',
			image: 'mockup-espamnews.png',
		},
		{
			name:'Comisariato Cleymer',
			description: 'E-commerce donde encontráras productos en todas las categorías.',
			technologiesUsed: [
			    {
					language:'vite',
					icon:'vite.png'
				},
				{
					language:'css',
					icon:'css-3.png'
				},
				{
					language:'react',
					icon:'react.png'
				},
				{
					language:'firebase',
					icon:'icon-firebase.png'
				},
			],
			link: 'https://comisariato-cleymer.netlify.app/',
			image: 'mockup-cleymer.png',
		}
	]
	const PROJECTS_MODAL = document.getElementById('projects-modal');
let indexProject = 0;

// Function to display a project
const displayProject = () => {
    if (!PROJECTS_MODAL) return;

    const project = MY_PROJECTS[indexProject];
    const projectHTML = `
	        <span>${indexProject + 1} / ${MY_PROJECTS.length}</span>
            <h3 class='merriweather-bold'>${project.name}</h3>
            <img src="${project.image}" alt="${project.name}" width="250" />
            <p>${project.description}</p>
			<div style="margin-top: 20px; padding: 10px; display:flex; flex-direction:column; gap:.5rem;>
        <h4 style="font-size: 18px; margin-bottom: 10px; color: #333;">Tecnologías usadas</h4>
        <div style="display: flex; flex-wrap: wrap; gap: 10px; justify-content:center;">
            ${project.technologiesUsed.map((tech) => (
                `<img name="${tech.language}" src="${tech.icon}" alt="${tech.language}" width="25"/>`
            )).join(' ')}
        </div>
    </div>
            <a href="${project.link}" target="_blank">Ver proyecto</a>
    `;

    const projectItemContainer = document.getElementById('project-item-container');
    projectItemContainer.innerHTML = projectHTML;

    PROJECTS_MODAL.style.display = 'inline-flex'; // Mostrar modal
    
};

BTN_PROJECTS?.addEventListener('click', displayProject);

const previous = document.getElementById('previus');
const next = document.getElementById('next');

previous?.addEventListener('click', () => {
	indexProject = (indexProject - 1 + MY_PROJECTS.length) % MY_PROJECTS.length;
	displayProject();
});

next?.addEventListener('click', () => {
	indexProject = (indexProject + 1) % MY_PROJECTS.length;
	displayProject();
});

const close_projects = document.getElementById('close-modal-projects')
close_projects?.addEventListener('click', () => {
	PROJECTS_MODAL.style.display = 'none';
})

document.getElementById("contact-form").addEventListener("submit", (event) => {
    event.preventDefault(); 

    const submitButton = event.target.querySelector("button");
    submitButton.textContent = "Enviando...";

    const formData = {
      user_email: document.getElementById("email").value,
      message: document.getElementById("message").value
    };

    emailjs.send("service_nhie8fp", "template_l7d18wv", formData)
      .then((response) => {
        alert("¡Mensaje enviado con éxito!");
        submitButton.textContent = "Enviar";
        event.target.reset(); 
      })
      .catch((error) => {
        alert("Hubo un error al enviar el mensaje. Por favor, intenta de nuevo.");
        submitButton.textContent = "Enviar";
        console.error("Error:", error);
      });
  });

</script>

<style>
	
	main {
		width: 100%;
		height: 100vh;
		max-height: 100vh;
	}
	h1 {
		font-size: 2.4rem;
		font-weight: bold;
		background: linear-gradient(90deg, var(--co-black-1), #2d3bff, #cf1512);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		color: var(--co-black-1); /* Fallback si no se soporta gradiente */
	}

	#sect-greet {
		position: relative;
		display: flex;
		flex-direction: column;
		align-items: center;
		height: 100%;
		text-align: center;
		padding: 0 2rem;
		gap: 1.8rem;
		justify-content: center;
	}
	#greet2 {
		color: var(--co-gray);
		text-shadow: 0 1.5px 1px var(--co-gray-3);
		line-height: 1.6;
	}
	#btn-my-proyects {
		cursor: pointer;
		width: 150px;
		height: 35px;
		box-shadow: 0 6px 15px -5px var(--co-gray-3);
		border: 1px solid var(--co-gray-2);
		background-color: var(--co-white);
		border-radius: 6px;
	}
	#btn-my-proyects:hover {
		background-color: var(--co-black-1);
		color: var(--co-white);
		transition: 0.7s ease;
		transform: scale(1.08);
	}
	#sect-contact-and-dm {
		position: absolute;
		top: 1rem;
		right: 1rem;
		display: flex;
		align-items: center;
		gap: 0.9rem;
		padding: 0 1rem;
	}
	#sect-contact-and-dm button:nth-child(2) {
		padding: 0.5rem;
		cursor: pointer;
		border-radius: 20px;
		color: var(--co-black-1);
		border: 1px solid var(--co-gray-3);
	}
	#sect-contact-and-dm button:last-child {
		background-color: var(--co-whit);
		cursor: pointer;
	}
	#cont-languages-know-to-use {
		width: 43%;
		flex-direction: column;
		gap: .5rem;
		align-items: center;
	}
	#languages-container {
		display: flex;
		align-items: center;
		justify-content: space-between;
		padding: 0.3rem 0;
	}
	#div-proyects-and-donwload-cv {
		width: 45%;
		display: flex;
		align-items: center;
		justify-content: center;
		gap: 3rem;
	}
	#donwload-cv {
		cursor: pointer;
		text-decoration: underline;
		color: var(--co-black-1);
	}
	#donwload-cv:hover {
		background: linear-gradient(90deg, var(--co-black-1), #2331fe, #cf1512);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		color: var(--co-black-1);
		transition: 0.5s ease;
	}
	.modal {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background-color: var(--co-black);
		display: flex;
		align-items: center;
		justify-content: center;
		z-index: 1000;
		opacity: 0;
		visibility: hidden;
		transition: opacity 0.3s ease, visibility 0.3s ease;
	}

	.modal.show {
		opacity: 1;
		visibility: visible;
	}

	.modal-content {
		background: var(--co-white);
		padding: 2rem;
		border-radius: 8px;
		box-shadow: 0px 5px 15px -5px rgba(0, 0, 0, 0.694);
		width: 400px;
		text-align: center;
		position: relative;
	}

	.modal-content h3 {
		margin-bottom: 1rem;
	}

	.modal-content label {
		display: block;
		margin-top: 1rem;
		font-weight: bold;
	}

	.modal-content input,
	.modal-content textarea {
		width: 100%;
		padding: 0.5rem;
		margin-top: 0.5rem;
		border: 1px solid var(--co-gray-3);
		border-radius: 4px;
		resize: none;
	}

	.modal-content button {
		margin-top: 1.5rem;
		padding: 0.5rem 1rem;
		background-color: var(--co-black-1);
		color: var(--co-white);
		border: none;
		border-radius: 4px;
		cursor: pointer;
	}

	.modal-content button:hover {
		transition: .5s ease;
		background-color: #0056b3;
	}

	.close {
		position: absolute;
		top: 10px;
		right: 10px;
		font-size: 1.2rem;
		cursor: pointer;
		color: var(--co-black);
	}
	.close:hover {
		color: red;
	}

	.hidden {
		opacity: 0;
		visibility: hidden;
	}
	#projects-modal {
		background-color: var(--co-black);
		width: 100%;
		height: 100vh;
		position: fixed;
		top: 0;
		z-index: 1;
		display: flex;
		justify-content: center;
		align-items: center;
		display: none;
	}
	#project-item-container {
    background-color: var(--co-white);
    padding: 20px;
    border-radius: 8px;
    width: 500px;
	height: 450px;
	position: relative;
    text-align: center;
	display: flex;
	align-items: center;
	flex-direction: column;
	gap:.5rem ;
	justify-content: space-between;
}

.styles-btn {
	font-size: 2rem;
	color: var(--co-gray-2);
	background-color: var(--co-white);
	padding: .3rem;
	cursor: pointer;
}
#next {
	border-radius: 0 10px 10px 0;
}
#previus {
	border-radius: 10px 0 0 10px;
}
#close-modal-projects {
	position: absolute;
	top: 13%;
	right: 31.5%;
	font-size: 1.1rem;
	cursor: pointer;
	background-color: var(--co-white);
	color: var(--co-gray-2);
}
#close-modal-projects:hover {
	color:red;
}
@media screen and (max-width:768px) {
	#sect-greet {
		padding: 1rem;
	}
	h1 {
		font-size:2.3rem;
		line-height: 1.4;
	}
	#cont-languages-know-to-use {
		width:100%;
		justify-content: space-between;
	}
	#div-proyects-and-donwload-cv {
		width:100%;
	}
	#sect-contact-and-dm {
		right:.5rem;
	}
	#project-item-container {
		height:80%;
	}
	#close-modal-projects {
		right:8%;
		top:11%;
	}
}
</style>
